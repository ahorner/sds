/*TextDisplay.asCreated by: Andrew HornerContents:TextDisplay defines class that displays information about the currently-playing background musicin the game, including the track name and artist name. The text is displayed over a translucent black background (for contrast).*/package hud{		import flash.text.TextField;	import flash.text.TextFormat;	import flash.display.MovieClip;	import flash.display.Shape;		public class TextDisplay extends MovieClip	{		var playingText:TextField = new TextField();		var trackText:TextField = new TextField();		var artistText:TextField = new TextField();		var backgroundShape:Shape = new Shape();				/**********************************************		Constructor method		**********************************************/		public function TextDisplay(trackName:String):void		{			super();			var textFormat:TextFormat = new TextFormat("Arial", "9", 0xFFFFFF);			playingText.defaultTextFormat = textFormat;			playingText.text = "current track";			playingText.multiline = false;			playingText.width = 200;			playingText.x = 5;			playingText.y = 5			this.addChild(playingText);			textFormat = new TextFormat("Arial", "14", 0xFFFFFF);			trackText.defaultTextFormat = textFormat;			trackText.multiline = false;			trackText.width = 200;			trackText.x = 5;			trackText.y = 20;			this.addChild(trackText);			textFormat = new TextFormat("Arial", "10", 0xFFFFFF);			artistText.defaultTextFormat = textFormat;			artistText.multiline = false;			artistText.width = 200;			artistText.x = 5;			artistText.y = 35;			this.addChild(artistText);			this.text = trackName;		}				/**********************************************		The following define pulbic methods of the		TextDisplay class.		**********************************************/				/**********************************************		Getters and Setters		**********************************************/		public function set text(useText:String):void		{			if (this.contains(backgroundShape))				this.removeChild(backgroundShape);							switch(useText)			{				case "LastPromise":					trackText.text = "Last Promise";					artistText.text = "Zero123Music";					break;				case "RoyalExecution":					trackText.text = "Royal Execution";					artistText.text = "woxx";					break;				case "StardustCrazy":					trackText.text = "Stardust Crazy";					artistText.text = "nattymiller";					break;				case "AlchemyFX":					trackText.text = "AlchemyFX";					artistText.text = "AxeFX";					break;				case "Jazzy":					trackText.text = "Jazzy";					artistText.text = "gwegster";					break;				case "DestructivePaths":					trackText.text = "Destructive Paths";					artistText.text = "SlaveLabor";					break;			}						var useWidth:Number = artistText.textWidth > trackText.textWidth ? artistText.textWidth : trackText.textWidth;			useWidth = useWidth > playingText.textWidth ? useWidth : playingText.textWidth;			backgroundShape = new Shape();			backgroundShape.graphics.beginFill(0x000000);			backgroundShape.graphics.drawRoundRect(0, 0, useWidth + 15, artistText.textHeight + trackText.textHeight + playingText.textHeight + 15, 20);			backgroundShape.alpha = 0.5;			this.addChildAt(backgroundShape, 0);		}		/**********************************************		**********************************************/	}}