/*GenderSelect.asCreated by: Andrew HornerContents:GenderSelect defines a game-specific gender selection menu, which allows the player to choose betweena male or female character.*/package menu{		import sound.SoundEffect;	import fl.transitions.easing.*;	import fl.transitions.Tween;	import fl.transitions.TweenEvent;	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.KeyboardEvent;	import flash.utils.Dictionary;	public class GenderSelect extends MovieClip	{				protected var isGirl:Boolean = true;		protected var tweenList:Dictionary = new Dictionary(false);				/**********************************************		Constructor method		**********************************************/		public function GenderSelect():void		{			this.boy.stop();			this.girl.stop();		}				/**********************************************		The following define public methods of the 		GenderSelect class.		**********************************************/				/*		Pre:	e is a reference to a KeyboardEvent.KEY_DOWN event		Post:	Handles the keypress appropriately, moving the spotlight when the arrow keys				are pressed, and submitting the selection when the ENTER key is pressed.		*/		public function keyHandler(e:KeyboardEvent):void		{			var tween:Tween;			var startX:Number = 200;			var endX:Number = 400;			if (e.keyCode == 37 || e.keyCode == 39)			{				var makeSound:SoundEffect;								if (isGirl)				{					makeSound = new SoundEffect("boySound", 200, 0.3);					this.boy.gotoAndPlay("idle");					this.boy.addEventListener(Event.ENTER_FRAME, playHandler);					startX = 400;					endX = 200;				}				else				{					makeSound = new SoundEffect("girlSound", 400, 0.3);					this.girl.gotoAndPlay("idle");					this.girl.addEventListener(Event.ENTER_FRAME, playHandler);				}				isGirl = !isGirl;				tween = new Tween(this.spotlight, "x", Strong.easeOut, startX, endX, .25, true);				tweenList[tween] = tween;				tween.addEventListener(TweenEvent.MOTION_FINISH, tweenHandler);				tween = new Tween(this.lightcircle, "x", Strong.easeOut, startX, endX, .25, true);				tweenList[tween] = tween;				tween.addEventListener(TweenEvent.MOTION_FINISH, tweenHandler);			}			else if (e.keyCode == 13)			{				var selectEvent:SelectionEvent;				if (isGirl)					selectEvent = new SelectionEvent(this, "girl");				else					selectEvent = new SelectionEvent(this, "boy");									this.dispatchEvent(selectEvent);				var enterSound:SoundEffect = new SoundEffect("bellSound");			}		}		/**********************************************		**********************************************/				/**********************************************		The following define private methods of the 		Genre class.		**********************************************/				/*		Pre: 	e is a reference to an Event.ENTER_FRAME event, attached to the boy or girl movieclip in the menu.		Post:	Looks for the "endidle" label, and stops animation once the label is reached.		*/		protected function playHandler(e:Event):void		{			if (e.target.currentLabel == "endidle")			{				e.target.removeEventListener(Event.ENTER_FRAME, playHandler);				e.target.stop();			}		}				/*		Pre:	e is a reference to a TweenEvent.MOTION_FINISH event, attached to a tween in the tweenList.		Post:	Removes the tween from the tweenList.		*/		protected function tweenHandler(e:TweenEvent):void		{			e.target.removeEventListener(TweenEvent.MOTION_FINISH, tweenHandler);			tweenList[e.target] = null;			delete tweenList[e.target];		}		/**********************************************		**********************************************/	}}			